//
//  ImagesCollectionInteractor.swift
//  MarsWatch
//
//  Created by BRQ on 25/04/19.
//  Copyright (c) 2019 BarbaRuiva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImagesCollectionBusinessLogic
{
    func getPhotos(request: ImagesCollection.Photos.Request, earthDate: String, rover: String)
}

protocol ImagesCollectionDataStore
{
    var photosCollection: [Photo] { get }

}

class ImagesCollectionInteractor: ImagesCollectionBusinessLogic, ImagesCollectionDataStore
{
    
    //VAR`s
  var presenter: ImagesCollectionPresentationLogic?
  var worker: ImagesCollectionWorker?
  var photosCollection: [Photo] = []
  // MARK: Do something
  
  func getPhotos(request: ImagesCollection.Photos.Request, earthDate: String, rover: String)
  {
    worker = ImagesCollectionWorker()
    worker?.getPhotos(rover: rover, earthDate: earthDate)
        .done { result in
            self.photosCollection = result
            let response = ImagesCollection.Photos.Response.Success(photos: result)
            self.presenter?.successGetPhotosCollection(response: response)
    }
        .catch { (error) in
            let response = ImagesCollection.Photos.Response.Failure(error: error)
            self.presenter?.failureGetPhotosCollection(response: response)
            
    }
  }
}
